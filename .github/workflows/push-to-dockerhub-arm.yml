name: Build and Publish ARM version Docker Image

on:
  release:
    types: [published, released, edited, created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      DOCKER_REGISTRY: kemansel.azurecr.io
      IMAGE_NAME: ${{ github.event.repository.name }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
      DOCKER_TARGET_PLATFORM: linux/arm/v8
      OS: ARM

    steps:
      - name: Checkout the code
        uses: actions/checkout@v1

      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest

      - name: Prepare
        if: success()
        id: prepare
        run: |
          echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
          echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}        
          echo ::set-output name=version::${GITHUB_RUN_NUMBER}

      - name: Docker Login
        if: success()
        run: |
          echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}

      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8
          format: "YYYY-MM-DD"

      - name: Run Buildx (push image)
        if: success()
        run: |
          docker buildx build \        
            --platform ${{ steps.prepare.outputs.DOCKER_TARGET_PLATFORM }} \        
            --tag ${{ steps.prepare.outputs.DOCKER_IMAGE }}:${{ steps.meta.outputs.tags }}-${{ env.OS }}-${{ steps.time.outputs.time }} \
            --file ./Dockerfile \        
            --output type=image,push=true .
